{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport classes from \"../../components/meetups/MeetupList.module.css\";\nimport { useContext } from \"react\";\nimport Card from \"../../components/ui/Card\"; // import MeetupItem from \"../../components/meetups/MeetupItem\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { useRouter } from \"next/router\";\nimport MeetupContext from \"../../context\";\n\nfunction MeetupDetail1(props) {\n  const meetupCtx = useContext(MeetupContext);\n  const router = useRouter();\n  const id = router.query.meetupId;\n  let meetup;\n  meetup = meetupCtx.getMeetup(id); //   if (!meetup) {\n  //     meetup = {\n  //       id: \"notfound\",\n  //       title: \"No title found\",\n  //       image:\n  //         \"https://image.shutterstock.com/image-vector/image-not-found-grayscale-photo-600w-1737334631.jpg\",\n  //       address: \"No Location Found\",\n  //       description: \"No description found\",\n  //     };\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n        id: props.meetupDetail._id,\n        image: props.meetupDetail.image,\n        title: props.meetupDetail.title,\n        address: props.meetupDetail.address,\n        description: props.meetupDetail.description\n      }, props.meetupDetail._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths(context) {\n  //   const meetupId = context.params.meetupId;\n  return {\n    paths: [],\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  try {\n    const client = await MongoClient.connect(\"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n    const meetup = await meetupsCollection.findOne({\n      _id: meetupId\n    });\n    console.log(result);\n    client.close();\n    return {\n      props: {\n        meetupDetail: meetup\n      }\n    };\n  } catch (error) {\n    console.log(e);\n  }\n}\nexport default MeetupDetail1;","map":{"version":3,"sources":["/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js"],"names":["MongoClient","classes","useContext","Card","MeetupDetail","useRouter","MeetupContext","MeetupDetail1","props","meetupCtx","router","id","query","meetupId","meetup","getMeetup","list","meetupDetail","_id","image","title","address","description","getStaticPaths","context","paths","fallback","getStaticProps","params","client","connect","db","meetupsCollection","collection","findOne","console","log","result","close","error","e"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,gDAApB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,IAAP,MAAiB,0BAAjB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,eAA1B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,SAAS,GAAGP,UAAU,CAACI,aAAD,CAA5B;AACA,QAAMI,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,EAAE,GAAGD,MAAM,CAACE,KAAP,CAAaC,QAAxB;AACA,MAAIC,MAAJ;AAEAA,EAAAA,MAAM,GAAGL,SAAS,CAACM,SAAV,CAAoBJ,EAApB,CAAT,CAN4B,CAQ5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,IAAD;AAAA,2BACE;AAAI,MAAA,SAAS,EAAEV,OAAO,CAACe,IAAvB;AAAA,6BACE,QAAC,YAAD;AAEE,QAAA,EAAE,EAAER,KAAK,CAACS,YAAN,CAAmBC,GAFzB;AAGE,QAAA,KAAK,EAAEV,KAAK,CAACS,YAAN,CAAmBE,KAH5B;AAIE,QAAA,KAAK,EAAEX,KAAK,CAACS,YAAN,CAAmBG,KAJ5B;AAKE,QAAA,OAAO,EAAEZ,KAAK,CAACS,YAAN,CAAmBI,OAL9B;AAME,QAAA,WAAW,EAAEb,KAAK,CAACS,YAAN,CAAmBK;AANlC,SACOd,KAAK,CAACS,YAAN,CAAmBC,GAD1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,OAAO,eAAeK,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BH,OAA9B,EAAuC;AAC5C,QAAMX,QAAQ,GAAGW,OAAO,CAACI,MAAR,CAAef,QAAhC;;AACA,MAAI;AACF,UAAMgB,MAAM,GAAG,MAAM7B,WAAW,CAAC8B,OAAZ,CACnB,+FADmB,CAArB;AAIA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,UAAMnB,MAAM,GAAG,MAAMkB,iBAAiB,CAACE,OAAlB,CAA0B;AAAEhB,MAAAA,GAAG,EAAEL;AAAP,KAA1B,CAArB;AAEAsB,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAR,IAAAA,MAAM,CAACS,KAAP;AAEA,WAAO;AAAE9B,MAAAA,KAAK,EAAE;AAAES,QAAAA,YAAY,EAAEH;AAAhB;AAAT,KAAP;AACD,GAbD,CAaE,OAAOyB,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACD;AACF;AAED,eAAejC,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport classes from \"../../components/meetups/MeetupList.module.css\";\nimport { useContext } from \"react\";\nimport Card from \"../../components/ui/Card\";\n// import MeetupItem from \"../../components/meetups/MeetupItem\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { useRouter } from \"next/router\";\nimport MeetupContext from \"../../context\";\n\nfunction MeetupDetail1(props) {\n  const meetupCtx = useContext(MeetupContext);\n  const router = useRouter();\n  const id = router.query.meetupId;\n  let meetup;\n\n  meetup = meetupCtx.getMeetup(id);\n\n  //   if (!meetup) {\n  //     meetup = {\n  //       id: \"notfound\",\n  //       title: \"No title found\",\n  //       image:\n  //         \"https://image.shutterstock.com/image-vector/image-not-found-grayscale-photo-600w-1737334631.jpg\",\n  //       address: \"No Location Found\",\n  //       description: \"No description found\",\n  //     };\n  //   }\n\n  return (\n    <Card>\n      <ul className={classes.list}>\n        <MeetupDetail\n          key={props.meetupDetail._id}\n          id={props.meetupDetail._id}\n          image={props.meetupDetail.image}\n          title={props.meetupDetail.title}\n          address={props.meetupDetail.address}\n          description={props.meetupDetail.description}\n        />\n      </ul>\n    </Card>\n  );\n}\n\nexport async function getStaticPaths(context) {\n  //   const meetupId = context.params.meetupId;\n  return {\n    paths: [],\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  try {\n    const client = await MongoClient.connect(\n      \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n    const meetup = await meetupsCollection.findOne({ _id: meetupId });\n\n    console.log(result);\n    client.close();\n\n    return { props: { meetupDetail: meetup } };\n  } catch (error) {\n    console.log(e);\n  }\n}\n\nexport default MeetupDetail1;\n"]},"metadata":{},"sourceType":"module"}