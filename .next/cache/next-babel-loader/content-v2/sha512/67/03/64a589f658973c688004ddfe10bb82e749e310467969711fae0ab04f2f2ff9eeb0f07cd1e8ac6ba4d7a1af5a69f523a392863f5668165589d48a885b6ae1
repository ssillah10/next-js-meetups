{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst getCollection = async (type, id) => {\n  console.log(\"getting collection\");\n  const client = await MongoClient.connect(\"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  if (type === \"findOne\") {\n    const meetup = await meetupsCollection.findOne({\n      _id: id\n    });\n    return meetup;\n  }\n\n  if (type === \"getIds\") {\n    const ids = await meetupsCollection.find({}, {\n      _id: 1\n    }).toArray();\n    return ids;\n  }\n\n  client.close();\n};\n\nfunction MeetupDetail1(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupDetail.image,\n    title: props.meetupDetail.title,\n    address: props.meetupDetail.address,\n    description: props.meetupDetail.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const meetups = getCollection(\"getIds\");\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const meetup = getCollection(\"findOne\", ObjectId(meetupId));\n  return {\n    props: {\n      meetupDetail: meetup\n    }\n  };\n}\nexport default MeetupDetail1;","map":{"version":3,"sources":["/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","getCollection","type","id","console","log","client","connect","db","meetupsCollection","collection","meetup","findOne","_id","ids","find","toArray","close","MeetupDetail1","props","meetupDetail","image","title","address","description","getStaticPaths","meetups","paths","map","params","meetupId","toString","fallback","getStaticProps","context"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAG,OAAOC,IAAP,EAAaC,EAAb,KAAoB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,+FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;;AACA,MAAIR,IAAI,KAAK,SAAb,EAAwB;AACtB,UAAMS,MAAM,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,MAAAA,GAAG,EAAEV;AAAP,KAA1B,CAArB;AACA,WAAOQ,MAAP;AACD;;AACD,MAAIT,IAAI,KAAK,QAAb,EAAuB;AACrB,UAAMY,GAAG,GAAG,MAAML,iBAAiB,CAACM,IAAlB,CAAuB,EAAvB,EAA2B;AAAEF,MAAAA,GAAG,EAAE;AAAP,KAA3B,EAAuCG,OAAvC,EAAlB;AACA,WAAOF,GAAP;AACD;;AAEDR,EAAAA,MAAM,CAACW,KAAP;AACD,CAlBD;;AAoBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,YAAN,CAAmBC,KAD5B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,YAAN,CAAmBE,KAF5B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,YAAN,CAAmBG,OAH9B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,YAAN,CAAmBI;AAJlC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAGzB,aAAa,CAAC,QAAD,CAA7B;AAEA,SAAO;AACL0B,IAAAA,KAAK,EAAED,OAAO,CAACE,GAAR,CAAajB,MAAD,KAAa;AAC9BkB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEnB,MAAM,CAACE,GAAP,CAAWkB,QAAX;AAAZ;AADsB,KAAb,CAAZ,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMnB,MAAM,GAAGV,aAAa,CAAC,SAAD,EAAYF,QAAQ,CAAC+B,QAAD,CAApB,CAA5B;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAET;AAAhB;AADF,GAAP;AAGD;AAED,eAAeO,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst getCollection = async (type, id) => {\n  console.log(\"getting collection\");\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  if (type === \"findOne\") {\n    const meetup = await meetupsCollection.findOne({ _id: id });\n    return meetup;\n  }\n  if (type === \"getIds\") {\n    const ids = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    return ids;\n  }\n\n  client.close();\n};\n\nfunction MeetupDetail1(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupDetail.image}\n      title={props.meetupDetail.title}\n      address={props.meetupDetail.address}\n      description={props.meetupDetail.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const meetups = getCollection(\"getIds\");\n\n  return {\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const meetup = getCollection(\"findOne\", ObjectId(meetupId));\n\n  return {\n    props: { meetupDetail: meetup },\n  };\n}\n\nexport default MeetupDetail1;\n"]},"metadata":{},"sourceType":"module"}