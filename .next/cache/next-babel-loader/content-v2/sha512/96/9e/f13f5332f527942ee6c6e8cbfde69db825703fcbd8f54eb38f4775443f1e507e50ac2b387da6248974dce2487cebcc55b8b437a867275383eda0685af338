{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"; // const getCollection = async () => {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   return { client, meetupsCollection };\n// };\n\nfunction MeetupDetail1(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupDetail.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupDetail.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupDetail.image,\n      title: props.meetupDetail.title,\n      address: props.meetupDetail.address,\n      description: props.meetupDetail.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetail1;\nexport var __N_SSG = true;\nexport default MeetupDetail1;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail1\");","map":{"version":3,"sources":["/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetail1","props","meetupDetail","title","description","image","address"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,YAAN,CAAmBC;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,YAAN,CAAmBE;AAArD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,YAAN,CAAmBG,KAD5B;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACC,YAAN,CAAmBC,KAF5B;AAGE,MAAA,OAAO,EAAEF,KAAK,CAACC,YAAN,CAAmBI,OAH9B;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,YAAN,CAAmBE;AAJlC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQJ,a;;AA2DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\n// const getCollection = async () => {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n\n//   return { client, meetupsCollection };\n// };\n\nfunction MeetupDetail1(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>{props.meetupDetail.title}</title>\n        <meta name=\"description\" content={props.meetupDetail.description} />\n      </Head>\n      <MeetupDetail\n        image={props.meetupDetail.image}\n        title={props.meetupDetail.title}\n        address={props.meetupDetail.address}\n        description={props.meetupDetail.description}\n      />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  // const { client, meetupsCollection } = getCollection();\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  //   const meetup = getCollection(\"findOne\", ObjectId(meetupId));\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n\n  return {\n    props: {\n      meetupDetail: {\n        id: meetup._id.toString(),\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetail1;\n"]},"metadata":{},"sourceType":"module"}