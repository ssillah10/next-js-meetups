{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport classes from \"../../components/meetups/MeetupList.module.css\"; // import { useContext } from \"react\";\n\nimport Card from \"../../components/ui/Card\"; // import MeetupItem from \"../../components/meetups/MeetupItem\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"; // import { useRouter } from \"next/router\";\n// import MeetupContext from \"../../context\";\n\nconst getCollection = async (type, id) => {\n  const client = await MongoClient.connect(\"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  if (type === \"findOne\") {\n    const meetup = await meetupsCollection.findOne({\n      _id: id\n    });\n    return meetup;\n  }\n\n  if (type === \"getIds\") {\n    const ids = await meetupsCollection.find({}, {\n      _id: 1\n    }).toArray();\n    return ids;\n  }\n\n  client.close();\n};\n\nfunction MeetupDetail1(props) {\n  //   const meetupCtx = useContext(MeetupContext);\n  //   const router = useRouter();\n  //   const id = router.query.meetupId;\n  //   let meetup;\n  //   meetup = meetupCtx.getMeetup(id);\n  //   if (!meetup) {\n  //     meetup = {\n  //       id: \"notfound\",\n  //       title: \"No title found\",\n  //       image:\n  //         \"https://image.shutterstock.com/image-vector/image-not-found-grayscale-photo-600w-1737334631.jpg\",\n  //       address: \"No Location Found\",\n  //       description: \"No description found\",\n  //     };\n  //   }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n        id: props.meetupDetail._id,\n        image: props.meetupDetail.image,\n        title: props.meetupDetail.title,\n        address: props.meetupDetail.address,\n        description: props.meetupDetail.description\n      }, props.meetupDetail._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const meetups = getCollection(\"getIds\");\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const meetup = getCollection(\"findOne\", meetupId);\n  return {\n    props: {\n      meetupDetail: meetup\n    }\n  };\n}\nexport default MeetupDetail1;","map":{"version":3,"sources":["/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js"],"names":["MongoClient","classes","Card","MeetupDetail","getCollection","type","id","client","connect","db","meetupsCollection","collection","meetup","findOne","_id","ids","find","toArray","close","MeetupDetail1","props","list","meetupDetail","image","title","address","description","getStaticPaths","meetups","paths","map","params","meetupId","toString","fallback","getStaticProps","context"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,gDAApB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,uCAAzB,C,CACA;AACA;;AAEA,MAAMC,aAAa,GAAG,OAAOC,IAAP,EAAaC,EAAb,KAAoB;AACxC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,+FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;;AACA,MAAIN,IAAI,KAAK,SAAb,EAAwB;AACtB,UAAMO,MAAM,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,MAAAA,GAAG,EAAER;AAAP,KAA1B,CAArB;AACA,WAAOM,MAAP;AACD;;AACD,MAAIP,IAAI,KAAK,QAAb,EAAuB;AACrB,UAAMU,GAAG,GAAG,MAAML,iBAAiB,CAACM,IAAlB,CAAuB,EAAvB,EAA2B;AAAEF,MAAAA,GAAG,EAAE;AAAP,KAA3B,EAAuCG,OAAvC,EAAlB;AACA,WAAOF,GAAP;AACD;;AAEDR,EAAAA,MAAM,CAACW,KAAP;AACD,CAjBD;;AAmBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,QAAC,IAAD;AAAA,2BACE;AAAI,MAAA,SAAS,EAAEnB,OAAO,CAACoB,IAAvB;AAAA,6BACE,QAAC,YAAD;AAEE,QAAA,EAAE,EAAED,KAAK,CAACE,YAAN,CAAmBR,GAFzB;AAGE,QAAA,KAAK,EAAEM,KAAK,CAACE,YAAN,CAAmBC,KAH5B;AAIE,QAAA,KAAK,EAAEH,KAAK,CAACE,YAAN,CAAmBE,KAJ5B;AAKE,QAAA,OAAO,EAAEJ,KAAK,CAACE,YAAN,CAAmBG,OAL9B;AAME,QAAA,WAAW,EAAEL,KAAK,CAACE,YAAN,CAAmBI;AANlC,SACON,KAAK,CAACE,YAAN,CAAmBR,GAD1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;AAED,OAAO,eAAea,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAGxB,aAAa,CAAC,QAAD,CAA7B;AAEA,SAAO;AACLyB,IAAAA,KAAK,EAAED,OAAO,CAACE,GAAR,CAAalB,MAAD,KAAa;AAC9BmB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEpB,MAAM,CAACE,GAAP,CAAWmB,QAAX;AAAZ;AADsB,KAAb,CAAZ,CADF;AAILC,IAAAA,QAAQ,EAAE;AAJL,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMpB,MAAM,GAAGR,aAAa,CAAC,SAAD,EAAY4B,QAAZ,CAA5B;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AAAEE,MAAAA,YAAY,EAAEV;AAAhB;AADF,GAAP;AAGD;AAED,eAAeO,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport classes from \"../../components/meetups/MeetupList.module.css\";\n// import { useContext } from \"react\";\nimport Card from \"../../components/ui/Card\";\n// import MeetupItem from \"../../components/meetups/MeetupItem\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n// import { useRouter } from \"next/router\";\n// import MeetupContext from \"../../context\";\n\nconst getCollection = async (type, id) => {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  if (type === \"findOne\") {\n    const meetup = await meetupsCollection.findOne({ _id: id });\n    return meetup;\n  }\n  if (type === \"getIds\") {\n    const ids = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    return ids;\n  }\n\n  client.close();\n};\n\nfunction MeetupDetail1(props) {\n  //   const meetupCtx = useContext(MeetupContext);\n  //   const router = useRouter();\n  //   const id = router.query.meetupId;\n  //   let meetup;\n\n  //   meetup = meetupCtx.getMeetup(id);\n\n  //   if (!meetup) {\n  //     meetup = {\n  //       id: \"notfound\",\n  //       title: \"No title found\",\n  //       image:\n  //         \"https://image.shutterstock.com/image-vector/image-not-found-grayscale-photo-600w-1737334631.jpg\",\n  //       address: \"No Location Found\",\n  //       description: \"No description found\",\n  //     };\n  //   }\n\n  return (\n    <Card>\n      <ul className={classes.list}>\n        <MeetupDetail\n          key={props.meetupDetail._id}\n          id={props.meetupDetail._id}\n          image={props.meetupDetail.image}\n          title={props.meetupDetail.title}\n          address={props.meetupDetail.address}\n          description={props.meetupDetail.description}\n        />\n      </ul>\n    </Card>\n  );\n}\n\nexport async function getStaticPaths() {\n  const meetups = getCollection(\"getIds\");\n\n  return {\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const meetup = getCollection(\"findOne\", meetupId);\n\n  return {\n    props: { meetupDetail: meetup },\n  };\n}\n\nexport default MeetupDetail1;\n"]},"metadata":{},"sourceType":"module"}