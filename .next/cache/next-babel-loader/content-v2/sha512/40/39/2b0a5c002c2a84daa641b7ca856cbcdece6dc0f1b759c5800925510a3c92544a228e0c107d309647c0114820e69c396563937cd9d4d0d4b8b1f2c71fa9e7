{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"; // const getCollection = async (type, id) => {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   if (type == \"findOne\") {\n//     const meetup = await meetupsCollection.findOne({ _id: id });\n//     return meetup;\n//   }\n//   if (type == \"getIds\") {\n//     const ids = await meetupsCollection.find({}, { _id: 1 }).toArray();\n//     return ids;\n//   }\n//   client.close();\n// };\n\nfunction MeetupDetail1(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupDetail.image,\n    title: props.meetupDetail.title,\n    address: props.meetupDetail.address,\n    description: props.meetupDetail.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetail1;\nexport var __N_SSG = true;\nexport default MeetupDetail1;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetail1\");","map":{"version":3,"sources":["/Users/saihousillah/Documents/React Bootcamp/Exercises/meetups-nextJS-demo/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetail1","props","meetupDetail","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,YAAN,CAAmBC,KAD5B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,YAAN,CAAmBE,KAF5B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,YAAN,CAAmBG,OAH9B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,YAAN,CAAmBI;AAJlC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AAoDT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\n// const getCollection = async (type, id) => {\n//   const client = await MongoClient.connect(\n//     \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n//   );\n//   const db = client.db();\n//   const meetupsCollection = db.collection(\"meetups\");\n//   if (type == \"findOne\") {\n//     const meetup = await meetupsCollection.findOne({ _id: id });\n//     return meetup;\n//   }\n//   if (type == \"getIds\") {\n//     const ids = await meetupsCollection.find({}, { _id: 1 }).toArray();\n//     return ids;\n//   }\n\n//   client.close();\n// };\n\nfunction MeetupDetail1(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupDetail.image}\n      title={props.meetupDetail.title}\n      address={props.meetupDetail.address}\n      description={props.meetupDetail.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  //   const meetups = getCollection(\"getIds\");\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  //   const meetup = getCollection(\"findOne\", ObjectId(meetupId));\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://ssillah:Genius10@cluster0.nazgy.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n\n  return {\n    props: {\n      meetupDetail: {\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetail1;\n"]},"metadata":{},"sourceType":"module"}